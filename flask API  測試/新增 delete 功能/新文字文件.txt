# 載入必須套件
from flask import Flask, request
from flask_restful import Resource, Api


# 創建Flask app物件
app = Flask(__name__)
api = Api(app)


# 創建陣列，用於存放品項
items = [
    {
        "name": "laby",
        "gender": "female",
        "age" : 22
    },

    {
        "name": "evan",
        "gender": "male",
        "age": 26
    }
]




class Item(Resource):

    # 單一品項查詢
    def get(self, name):
        item = next(filter(lambda x: x['name'] == name, items), None)
        return {'item': item }, 200 if item else 404


    # 建制新品項
    def post(self, name):
        # 如果該品項已經存在 items 內，就找出並回傳給客戶端該品項已經存在
        if next(filter(lambda x: x['name'] == name, items), None):
            return {'message': f'An item with name {name} already exists ..'}, 403

        # 如果該品項不存在，則解析客戶端傳來的body，並將其品項寫入 items
        data = request.get_json()
        item = {'name': name, 'gender': data['gender'] , "age":data["age"]}
        items.append(item)
        # return item
        return {'message': f'An item with name \'{name}\' has been added successfully'}, 201


    # 刪除某筆品項
    def delete(self,name):
        # 如果該品項存在於 "items"內，指定刪除之
        if next(filter(lambda x: x['name'] == name, items), None):
            data = request.get_json()
            item = {'name': name, 'gender': data['gender'], "age": data["age"]}
            items.remove(item)
            return {'message': f'An item with name \'{name}\' has been deleted successfully'} , 201



class ItemsList(Resource):
    # 取得所有品項
    def get(self):
        return {'items': items }



api.add_resource(Item, '/item/<string:name>')
api.add_resource(ItemsList, '/items')


if __name__ == "__main__":
    app.run(port=5000, debug=True)




# item = "aaa"
# print("message: An item with name \"{}\" added successfully".format(item))